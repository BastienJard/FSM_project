/** Generated by YAKINDU Statechart Tools code generator. */
package fr.univcotedazur.polytech.si4.fsm.project.recette;

import fr.univcotedazur.polytech.si4.fsm.project.IStatemachine;
import fr.univcotedazur.polytech.si4.fsm.project.ITimed;
import fr.univcotedazur.polytech.si4.fsm.project.ITimerService;
import fr.univcotedazur.polytech.si4.fsm.project.rx.Observable;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;

public class RecetteMachineStatemachine implements IStatemachine, ITimed {
	public enum State {
		MAIN_REGION_BEGINNINGRECIEP,
		MAIN_REGION_PREPAREDRINK,
		MAIN_REGION_PREPAREDRINK__REGION0_STEP1,
		MAIN_REGION_PREPAREDRINK__REGION0_STEP2,
		MAIN_REGION_PREPAREDRINK__REGION0_STEP3,
		MAIN_REGION_PREPAREDRINK__REGION0_STEP4,
		MAIN_REGION_PREPAREDRINK__REGION0_STAPE5,
		MAIN_REGION_PREPAREDRINK__REGION1_INCREASEPROGRESSBAR,
		$NULLSTATE$
	};
	
	private final State[] stateVector = new State[2];
	
	private int nextStateIndex;
	
	private ITimerService timerService;
	
	private final boolean[] timeEvents = new boolean[6];
	
	private BlockingQueue<Runnable> inEventQueue = new LinkedBlockingQueue<Runnable>();
	private boolean isExecuting;
	
	protected boolean getIsExecuting() {
		synchronized(RecetteMachineStatemachine.this) {
			return isExecuting;
		}
	}
	
	protected void setIsExecuting(boolean value) {
		synchronized(RecetteMachineStatemachine.this) {
			this.isExecuting = value;
		}
	}
	public RecetteMachineStatemachine() {
		for (int i = 0; i < 2; i++) {
			stateVector[i] = State.$NULLSTATE$;
		}
		
		clearInEvents();
		
		setIncreaseTime(0);
		
		setTimeStep1(0);
		
		setTimeStep2(0);
		
		setTimeStep3(0);
		
		setTimeStep4(0);
		
		setTimeStep5(0);
		
		isExecuting = false;
	}
	
	public synchronized void enter() {
		if (timerService == null) {
			throw new IllegalStateException("Timer service must be set.");
		}
		
		
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		enterSequence_main_region_default();
		isExecuting = false;
	}
	
	public synchronized void exit() {
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		exitSequence_main_region();
		isExecuting = false;
	}
	
	/**
	 * @see IStatemachine#isActive()
	 */
	public synchronized boolean isActive() {
		return stateVector[0] != State.$NULLSTATE$||stateVector[1] != State.$NULLSTATE$;
	}
	
	/** 
	* Always returns 'false' since this state machine can never become final.
	*
	* @see IStatemachine#isFinal()
	*/
	public synchronized boolean isFinal() {
		return false;
	}
	private void clearInEvents() {
		beginRecipe = false;
		next = false;
		finRecette = false;
		timeEvents[0] = false;
		timeEvents[1] = false;
		timeEvents[2] = false;
		timeEvents[3] = false;
		timeEvents[4] = false;
		timeEvents[5] = false;
	}
	
	private void runCycle() {
		if (timerService == null) {
			throw new IllegalStateException("Timer service must be set.");
		}
		
		
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		nextEvent();
		do { 
			for (nextStateIndex = 0; nextStateIndex < stateVector.length; nextStateIndex++) {
				switch (stateVector[nextStateIndex]) {
				case MAIN_REGION_BEGINNINGRECIEP:
					main_region_beginningReciep_react(true);
					break;
				case MAIN_REGION_PREPAREDRINK__REGION0_STEP1:
					main_region_PrepareDrink__region0_Step1_react(true);
					break;
				case MAIN_REGION_PREPAREDRINK__REGION0_STEP2:
					main_region_PrepareDrink__region0_Step2_react(true);
					break;
				case MAIN_REGION_PREPAREDRINK__REGION0_STEP3:
					main_region_PrepareDrink__region0_Step3_react(true);
					break;
				case MAIN_REGION_PREPAREDRINK__REGION0_STEP4:
					main_region_PrepareDrink__region0_Step4_react(true);
					break;
				case MAIN_REGION_PREPAREDRINK__REGION0_STAPE5:
					main_region_PrepareDrink__region0_Stape5_react(true);
					break;
				case MAIN_REGION_PREPAREDRINK__REGION1_INCREASEPROGRESSBAR:
					main_region_PrepareDrink__region1_IncreaseProgressBar_react(true);
					break;
				default:
					// $NULLSTATE$
				}
			}
			
			clearInEvents();
			nextEvent();
		} while (((((((((beginRecipe || next) || finRecette) || timeEvents[0]) || timeEvents[1]) || timeEvents[2]) || timeEvents[3]) || timeEvents[4]) || timeEvents[5]));
		
		isExecuting = false;
	}
	
	protected void nextEvent() {
		if(!inEventQueue.isEmpty()) {
			inEventQueue.poll().run();
			return;
		}
	}
	/**
	* Returns true if the given state is currently active otherwise false.
	*/
	public synchronized boolean isStateActive(State state) {
	
		switch (state) {
		case MAIN_REGION_BEGINNINGRECIEP:
			return stateVector[0] == State.MAIN_REGION_BEGINNINGRECIEP;
		case MAIN_REGION_PREPAREDRINK:
			return stateVector[0].ordinal() >= State.
					MAIN_REGION_PREPAREDRINK.ordinal()&& stateVector[0].ordinal() <= State.MAIN_REGION_PREPAREDRINK__REGION1_INCREASEPROGRESSBAR.ordinal();
		case MAIN_REGION_PREPAREDRINK__REGION0_STEP1:
			return stateVector[0] == State.MAIN_REGION_PREPAREDRINK__REGION0_STEP1;
		case MAIN_REGION_PREPAREDRINK__REGION0_STEP2:
			return stateVector[0] == State.MAIN_REGION_PREPAREDRINK__REGION0_STEP2;
		case MAIN_REGION_PREPAREDRINK__REGION0_STEP3:
			return stateVector[0] == State.MAIN_REGION_PREPAREDRINK__REGION0_STEP3;
		case MAIN_REGION_PREPAREDRINK__REGION0_STEP4:
			return stateVector[0] == State.MAIN_REGION_PREPAREDRINK__REGION0_STEP4;
		case MAIN_REGION_PREPAREDRINK__REGION0_STAPE5:
			return stateVector[0] == State.MAIN_REGION_PREPAREDRINK__REGION0_STAPE5;
		case MAIN_REGION_PREPAREDRINK__REGION1_INCREASEPROGRESSBAR:
			return stateVector[1] == State.MAIN_REGION_PREPAREDRINK__REGION1_INCREASEPROGRESSBAR;
		default:
			return false;
		}
	}
	
	public synchronized void setTimerService(ITimerService timerService) {
		this.timerService = timerService;
	}
	
	public ITimerService getTimerService() {
		return timerService;
	}
	
	public synchronized void raiseTimeEvent(int eventID) {
		inEventQueue.add(new Runnable() {
			@Override
			public void run() {
				timeEvents[eventID] = true;
			}
		});
		runCycle();
	}
	
	private boolean beginRecipe;
	
	
	public void raiseBeginRecipe() {
		synchronized(RecetteMachineStatemachine.this) {
			inEventQueue.add(new Runnable() {
				@Override
				public void run() {
					beginRecipe = true;
				}
			});
			runCycle();
		}
	}
	
	private boolean next;
	
	
	public void raiseNext() {
		synchronized(RecetteMachineStatemachine.this) {
			inEventQueue.add(new Runnable() {
				@Override
				public void run() {
					next = true;
				}
			});
			runCycle();
		}
	}
	
	private boolean finRecette;
	
	
	public void raiseFinRecette() {
		synchronized(RecetteMachineStatemachine.this) {
			inEventQueue.add(new Runnable() {
				@Override
				public void run() {
					finRecette = true;
				}
			});
			runCycle();
		}
	}
	
	private boolean etape1;
	
	
	protected void raiseEtape1() {
		synchronized(RecetteMachineStatemachine.this) {
			etape1 = true;
			etape1Observable.next(null);
		}
	}
	
	private Observable<Void> etape1Observable = new Observable<Void>();
	
	public Observable<Void> getEtape1() {
		return etape1Observable;
	}
	
	private boolean etape2;
	
	
	protected void raiseEtape2() {
		synchronized(RecetteMachineStatemachine.this) {
			etape2 = true;
			etape2Observable.next(null);
		}
	}
	
	private Observable<Void> etape2Observable = new Observable<Void>();
	
	public Observable<Void> getEtape2() {
		return etape2Observable;
	}
	
	private boolean etape3;
	
	
	protected void raiseEtape3() {
		synchronized(RecetteMachineStatemachine.this) {
			etape3 = true;
			etape3Observable.next(null);
		}
	}
	
	private Observable<Void> etape3Observable = new Observable<Void>();
	
	public Observable<Void> getEtape3() {
		return etape3Observable;
	}
	
	private boolean etape4;
	
	
	protected void raiseEtape4() {
		synchronized(RecetteMachineStatemachine.this) {
			etape4 = true;
			etape4Observable.next(null);
		}
	}
	
	private Observable<Void> etape4Observable = new Observable<Void>();
	
	public Observable<Void> getEtape4() {
		return etape4Observable;
	}
	
	private boolean etape5;
	
	
	protected void raiseEtape5() {
		synchronized(RecetteMachineStatemachine.this) {
			etape5 = true;
			etape5Observable.next(null);
		}
	}
	
	private Observable<Void> etape5Observable = new Observable<Void>();
	
	public Observable<Void> getEtape5() {
		return etape5Observable;
	}
	
	private boolean enAttente;
	
	
	protected void raiseEnAttente() {
		synchronized(RecetteMachineStatemachine.this) {
			enAttente = true;
			enAttenteObservable.next(null);
		}
	}
	
	private Observable<Void> enAttenteObservable = new Observable<Void>();
	
	public Observable<Void> getEnAttente() {
		return enAttenteObservable;
	}
	
	private boolean increaseProgressBar;
	
	
	protected void raiseIncreaseProgressBar() {
		synchronized(RecetteMachineStatemachine.this) {
			increaseProgressBar = true;
			increaseProgressBarObservable.next(null);
		}
	}
	
	private Observable<Void> increaseProgressBarObservable = new Observable<Void>();
	
	public Observable<Void> getIncreaseProgressBar() {
		return increaseProgressBarObservable;
	}
	
	private long increaseTime;
	
	public synchronized long getIncreaseTime() {
		synchronized(RecetteMachineStatemachine.this) {
			return increaseTime;
		}
	}
	
	public void setIncreaseTime(long value) {
		synchronized(RecetteMachineStatemachine.this) {
			this.increaseTime = value;
		}
	}
	
	private long timeStep1;
	
	public synchronized long getTimeStep1() {
		synchronized(RecetteMachineStatemachine.this) {
			return timeStep1;
		}
	}
	
	public void setTimeStep1(long value) {
		synchronized(RecetteMachineStatemachine.this) {
			this.timeStep1 = value;
		}
	}
	
	private long timeStep2;
	
	public synchronized long getTimeStep2() {
		synchronized(RecetteMachineStatemachine.this) {
			return timeStep2;
		}
	}
	
	public void setTimeStep2(long value) {
		synchronized(RecetteMachineStatemachine.this) {
			this.timeStep2 = value;
		}
	}
	
	private long timeStep3;
	
	public synchronized long getTimeStep3() {
		synchronized(RecetteMachineStatemachine.this) {
			return timeStep3;
		}
	}
	
	public void setTimeStep3(long value) {
		synchronized(RecetteMachineStatemachine.this) {
			this.timeStep3 = value;
		}
	}
	
	private long timeStep4;
	
	public synchronized long getTimeStep4() {
		synchronized(RecetteMachineStatemachine.this) {
			return timeStep4;
		}
	}
	
	public void setTimeStep4(long value) {
		synchronized(RecetteMachineStatemachine.this) {
			this.timeStep4 = value;
		}
	}
	
	private long timeStep5;
	
	public synchronized long getTimeStep5() {
		synchronized(RecetteMachineStatemachine.this) {
			return timeStep5;
		}
	}
	
	public void setTimeStep5(long value) {
		synchronized(RecetteMachineStatemachine.this) {
			this.timeStep5 = value;
		}
	}
	
	/* Entry action for state 'Step1'. */
	private void entryAction_main_region_PrepareDrink__region0_Step1() {
		timerService.setTimer(this, 0, getTimeStep1(), false);
		
		raiseEtape1();
	}
	
	/* Entry action for state 'Step2'. */
	private void entryAction_main_region_PrepareDrink__region0_Step2() {
		timerService.setTimer(this, 1, getTimeStep2(), false);
		
		raiseEtape2();
	}
	
	/* Entry action for state 'Step3'. */
	private void entryAction_main_region_PrepareDrink__region0_Step3() {
		timerService.setTimer(this, 2, getTimeStep3(), false);
		
		raiseEtape3();
	}
	
	/* Entry action for state 'Step4'. */
	private void entryAction_main_region_PrepareDrink__region0_Step4() {
		timerService.setTimer(this, 3, getTimeStep4(), false);
		
		raiseEtape4();
	}
	
	/* Entry action for state 'Stape5'. */
	private void entryAction_main_region_PrepareDrink__region0_Stape5() {
		timerService.setTimer(this, 4, getTimeStep5(), false);
		
		raiseEtape5();
	}
	
	/* Entry action for state 'IncreaseProgressBar'. */
	private void entryAction_main_region_PrepareDrink__region1_IncreaseProgressBar() {
		timerService.setTimer(this, 5, getIncreaseTime(), true);
	}
	
	/* Exit action for state 'Step1'. */
	private void exitAction_main_region_PrepareDrink__region0_Step1() {
		timerService.unsetTimer(this, 0);
	}
	
	/* Exit action for state 'Step2'. */
	private void exitAction_main_region_PrepareDrink__region0_Step2() {
		timerService.unsetTimer(this, 1);
	}
	
	/* Exit action for state 'Step3'. */
	private void exitAction_main_region_PrepareDrink__region0_Step3() {
		timerService.unsetTimer(this, 2);
	}
	
	/* Exit action for state 'Step4'. */
	private void exitAction_main_region_PrepareDrink__region0_Step4() {
		timerService.unsetTimer(this, 3);
	}
	
	/* Exit action for state 'Stape5'. */
	private void exitAction_main_region_PrepareDrink__region0_Stape5() {
		timerService.unsetTimer(this, 4);
	}
	
	/* Exit action for state 'IncreaseProgressBar'. */
	private void exitAction_main_region_PrepareDrink__region1_IncreaseProgressBar() {
		timerService.unsetTimer(this, 5);
	}
	
	/* 'default' enter sequence for state beginningReciep */
	private void enterSequence_main_region_beginningReciep_default() {
		nextStateIndex = 0;
		stateVector[0] = State.MAIN_REGION_BEGINNINGRECIEP;
	}
	
	/* 'default' enter sequence for state PrepareDrink */
	private void enterSequence_main_region_PrepareDrink_default() {
		enterSequence_main_region_PrepareDrink__region0_default();
		enterSequence_main_region_PrepareDrink__region1_default();
	}
	
	/* 'default' enter sequence for state Step1 */
	private void enterSequence_main_region_PrepareDrink__region0_Step1_default() {
		entryAction_main_region_PrepareDrink__region0_Step1();
		nextStateIndex = 0;
		stateVector[0] = State.MAIN_REGION_PREPAREDRINK__REGION0_STEP1;
	}
	
	/* 'default' enter sequence for state Step2 */
	private void enterSequence_main_region_PrepareDrink__region0_Step2_default() {
		entryAction_main_region_PrepareDrink__region0_Step2();
		nextStateIndex = 0;
		stateVector[0] = State.MAIN_REGION_PREPAREDRINK__REGION0_STEP2;
	}
	
	/* 'default' enter sequence for state Step3 */
	private void enterSequence_main_region_PrepareDrink__region0_Step3_default() {
		entryAction_main_region_PrepareDrink__region0_Step3();
		nextStateIndex = 0;
		stateVector[0] = State.MAIN_REGION_PREPAREDRINK__REGION0_STEP3;
	}
	
	/* 'default' enter sequence for state Step4 */
	private void enterSequence_main_region_PrepareDrink__region0_Step4_default() {
		entryAction_main_region_PrepareDrink__region0_Step4();
		nextStateIndex = 0;
		stateVector[0] = State.MAIN_REGION_PREPAREDRINK__REGION0_STEP4;
	}
	
	/* 'default' enter sequence for state Stape5 */
	private void enterSequence_main_region_PrepareDrink__region0_Stape5_default() {
		entryAction_main_region_PrepareDrink__region0_Stape5();
		nextStateIndex = 0;
		stateVector[0] = State.MAIN_REGION_PREPAREDRINK__REGION0_STAPE5;
	}
	
	/* 'default' enter sequence for state IncreaseProgressBar */
	private void enterSequence_main_region_PrepareDrink__region1_IncreaseProgressBar_default() {
		entryAction_main_region_PrepareDrink__region1_IncreaseProgressBar();
		nextStateIndex = 1;
		stateVector[1] = State.MAIN_REGION_PREPAREDRINK__REGION1_INCREASEPROGRESSBAR;
	}
	
	/* 'default' enter sequence for region main region */
	private void enterSequence_main_region_default() {
		react_main_region__entry_Default();
	}
	
	/* 'default' enter sequence for region null */
	private void enterSequence_main_region_PrepareDrink__region0_default() {
		react_main_region_PrepareDrink__region0__entry_Default();
	}
	
	/* 'default' enter sequence for region null */
	private void enterSequence_main_region_PrepareDrink__region1_default() {
		react_main_region_PrepareDrink__region1__entry_Default();
	}
	
	/* Default exit sequence for state beginningReciep */
	private void exitSequence_main_region_beginningReciep() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state PrepareDrink */
	private void exitSequence_main_region_PrepareDrink() {
		exitSequence_main_region_PrepareDrink__region0();
		exitSequence_main_region_PrepareDrink__region1();
	}
	
	/* Default exit sequence for state Step1 */
	private void exitSequence_main_region_PrepareDrink__region0_Step1() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
		
		exitAction_main_region_PrepareDrink__region0_Step1();
	}
	
	/* Default exit sequence for state Step2 */
	private void exitSequence_main_region_PrepareDrink__region0_Step2() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
		
		exitAction_main_region_PrepareDrink__region0_Step2();
	}
	
	/* Default exit sequence for state Step3 */
	private void exitSequence_main_region_PrepareDrink__region0_Step3() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
		
		exitAction_main_region_PrepareDrink__region0_Step3();
	}
	
	/* Default exit sequence for state Step4 */
	private void exitSequence_main_region_PrepareDrink__region0_Step4() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
		
		exitAction_main_region_PrepareDrink__region0_Step4();
	}
	
	/* Default exit sequence for state Stape5 */
	private void exitSequence_main_region_PrepareDrink__region0_Stape5() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
		
		exitAction_main_region_PrepareDrink__region0_Stape5();
	}
	
	/* Default exit sequence for state IncreaseProgressBar */
	private void exitSequence_main_region_PrepareDrink__region1_IncreaseProgressBar() {
		nextStateIndex = 1;
		stateVector[1] = State.$NULLSTATE$;
		
		exitAction_main_region_PrepareDrink__region1_IncreaseProgressBar();
	}
	
	/* Default exit sequence for region main region */
	private void exitSequence_main_region() {
		switch (stateVector[0]) {
		case MAIN_REGION_BEGINNINGRECIEP:
			exitSequence_main_region_beginningReciep();
			break;
		case MAIN_REGION_PREPAREDRINK__REGION0_STEP1:
			exitSequence_main_region_PrepareDrink__region0_Step1();
			break;
		case MAIN_REGION_PREPAREDRINK__REGION0_STEP2:
			exitSequence_main_region_PrepareDrink__region0_Step2();
			break;
		case MAIN_REGION_PREPAREDRINK__REGION0_STEP3:
			exitSequence_main_region_PrepareDrink__region0_Step3();
			break;
		case MAIN_REGION_PREPAREDRINK__REGION0_STEP4:
			exitSequence_main_region_PrepareDrink__region0_Step4();
			break;
		case MAIN_REGION_PREPAREDRINK__REGION0_STAPE5:
			exitSequence_main_region_PrepareDrink__region0_Stape5();
			break;
		default:
			break;
		}
		
		switch (stateVector[1]) {
		case MAIN_REGION_PREPAREDRINK__REGION1_INCREASEPROGRESSBAR:
			exitSequence_main_region_PrepareDrink__region1_IncreaseProgressBar();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region null */
	private void exitSequence_main_region_PrepareDrink__region0() {
		switch (stateVector[0]) {
		case MAIN_REGION_PREPAREDRINK__REGION0_STEP1:
			exitSequence_main_region_PrepareDrink__region0_Step1();
			break;
		case MAIN_REGION_PREPAREDRINK__REGION0_STEP2:
			exitSequence_main_region_PrepareDrink__region0_Step2();
			break;
		case MAIN_REGION_PREPAREDRINK__REGION0_STEP3:
			exitSequence_main_region_PrepareDrink__region0_Step3();
			break;
		case MAIN_REGION_PREPAREDRINK__REGION0_STEP4:
			exitSequence_main_region_PrepareDrink__region0_Step4();
			break;
		case MAIN_REGION_PREPAREDRINK__REGION0_STAPE5:
			exitSequence_main_region_PrepareDrink__region0_Stape5();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region null */
	private void exitSequence_main_region_PrepareDrink__region1() {
		switch (stateVector[1]) {
		case MAIN_REGION_PREPAREDRINK__REGION1_INCREASEPROGRESSBAR:
			exitSequence_main_region_PrepareDrink__region1_IncreaseProgressBar();
			break;
		default:
			break;
		}
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region__entry_Default() {
		enterSequence_main_region_beginningReciep_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_PrepareDrink__region0__entry_Default() {
		enterSequence_main_region_PrepareDrink__region0_Step1_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_PrepareDrink__region1__entry_Default() {
		enterSequence_main_region_PrepareDrink__region1_IncreaseProgressBar_default();
	}
	
	private boolean react() {
		return false;
	}
	
	private boolean main_region_beginningReciep_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (beginRecipe) {
				exitSequence_main_region_beginningReciep();
				enterSequence_main_region_PrepareDrink_default();
				react();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean main_region_PrepareDrink_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean main_region_PrepareDrink__region0_Step1_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[0]) {
				exitSequence_main_region_PrepareDrink__region0_Step1();
				enterSequence_main_region_PrepareDrink__region0_Step2_default();
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_PrepareDrink__region0_Step2_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[1]) {
				exitSequence_main_region_PrepareDrink__region0_Step2();
				enterSequence_main_region_PrepareDrink__region0_Step3_default();
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_PrepareDrink__region0_Step3_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[2]) {
				exitSequence_main_region_PrepareDrink__region0_Step3();
				enterSequence_main_region_PrepareDrink__region0_Step4_default();
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_PrepareDrink__region0_Step4_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[3]) {
				exitSequence_main_region_PrepareDrink__region0_Step4();
				enterSequence_main_region_PrepareDrink__region0_Stape5_default();
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_PrepareDrink__region0_Stape5_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[4]) {
				exitSequence_main_region_PrepareDrink();
				raiseEnAttente();
				
				enterSequence_main_region_beginningReciep_default();
				react();
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_PrepareDrink__region1_IncreaseProgressBar_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			if (timeEvents[5]) {
				raiseIncreaseProgressBar();
			}
			did_transition = main_region_PrepareDrink_react(try_transition);
		}
		return did_transition;
	}
	
}
